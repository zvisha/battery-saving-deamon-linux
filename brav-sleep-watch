#!/bin/bash

# Configuration
APPS=("cursor" "brave")  # Add or modify apps here

# State variables
LAST_WID=""
LAST_POWER=""
ON_APP=""
export DISPLAY=:0
previous=""

# Power functions
disable_turbo() {
    echo 1 | sudo tee /sys/devices/system/cpu/intel_pstate/no_turbo > /dev/null 2>&1
    notify-send "Power" "Turbo OFF" -t 2000
}

enable_turbo() {
    echo 0 | sudo tee /sys/devices/system/cpu/intel_pstate/no_turbo > /dev/null 2>&1
    notify-send "Power" "Turbo ON" -t 2000
}

# Generic app control functions
sleep_app() {
    local app="$1"
    killall -STOP "$app" 2>/dev/null
    notify-send "${app^}" "Suspended" -t 1300
}

wake_app() {
    local app="$1"
    killall -CONT "$app" 2>/dev/null
    notify-send "${app^}" "Resumed" -t 1300
}

# Wake all configured apps
wake_all_apps() {
    for app in "${APPS[@]}"; do
        wake_app "$app"
    done
}

# Sleep all configured apps except the specified one
sleep_other_apps() {
    local active_app="$1"
    for app in "${APPS[@]}"; do
        if [ "$app" != "$active_app" ]; then
            sleep_app "$app"
        fi
    done
}

# Sleep all configured apps
sleep_all_apps() {
    for app in "${APPS[@]}"; do
        sleep_app "$app"
    done
}

# Check if window name contains any of the configured apps
get_active_app() {
    local window="$1"
    local window_lower="${window,,}"
    
    for app in "${APPS[@]}"; do
        if [[ "$window_lower" == *"$app"* ]]; then
            echo "$app"
            return
        fi
    done
    echo ""
}

update_clipboard() {
    current=$(xclip -o -selection clipboard 2>/dev/null)
    
    if [ "$current" != "$previous" ] && [ -n "$current" ]; then
        # Force store in buffer (breaks link to source app)
        echo "$current" | xclip -selection clipboard -i
        echo "$current" | xclip -selection primary -i
        previous="$current"
    fi
}

# Main loop
while true; do
    # Check power status
    if grep -q "Discharging" /sys/class/power_supply/BAT*/status 2>/dev/null; then
        power="battery"
    else
        power="ac"
    fi
    
    # Handle power state changes
    if [ "$power" != "$LAST_POWER" ]; then
        if [ "$power" = "battery" ]; then
            disable_turbo
        else
            enable_turbo
            wake_all_apps
        fi
        LAST_POWER="$power"
    fi
    
    # On AC power, just sleep
    if [ "$power" = "ac" ]; then
        sleep 30
        continue
    fi
    
    # Check active window
    wid=$(xdotool getactivewindow 2>/dev/null)
    if [ "$wid" != "$LAST_WID" ]; then
        LAST_WID="$wid"
        window=$(xdotool getwindowname "$wid" 2>/dev/null)
        
        # Get the active app from window name
        active_app=$(get_active_app "$window")
        
        if [ -n "$active_app" ]; then
            # Wake the active app and sleep others
            wake_app "$active_app"
            update_clipboard
            sleep_other_apps "$active_app"
            ON_APP="$active_app"
            #update_clipboard
            sleep 1
        elif [ -n "$ON_APP" ]; then
            # No configured app is active, sleep the previously active one
            update_clipboard
            sleep_app "$ON_APP"
            ON_APP=""
            #update_clipboard
            sleep 1
        fi
    else
        sleep 1
    fi
done 
